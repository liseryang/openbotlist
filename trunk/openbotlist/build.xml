<?xml version="1.0" encoding="UTF-8"?>
<!-- ****************************************************** -->
<!-- Copyright (c) 2006 - Berlin Brown -->
<!-- Ant script that is located in the Tomcat webapp directory and -->
<!-- writes classes to this particular directory -->
<!-- Description: Testing ruby with with spring web application -->
<!-- Date: 11/1/2006 -->
<!-- ****************************************************** -->
<project name="BotList Main Build File" default="package" basedir=".">

	<property file="build.properties" />
	
	<property name="build.dir"          value="${basedir}/build"/>
	<property name="build.classes.dir"	value="${basedir}/build/classes"/>
	<property name="src.dir"          	value="${basedir}/src"/>
	<property name="lib.dir"          	value="${basedir}/WEB-INF/lib"/>

	<!-- Web Apps Directory -->
	<property name="default.tomcat.webapps" value="${tomcat.home}/webapps" />

	<!-- Define the library files -->
	<property name="acegi.jar"  	value="${lib.dir}/acegi-security-1.0.3.jar" />
	<property name="hibernate.jar"  value="${lib.dir}/hibernate3.jar" />
	<property name="junit.jar"		value="${lib.dir}/junit-3.8.1.jar" />
	<property name="log4j.jar"    	value="${lib.dir}/log4j-1.2.14.jar" />
	<property name="dom4j.jar"     	value="${lib.dir}/dom4j-1.6.1.jar" />
	<property name="logging.jar"    value="${lib.dir}/commons-logging-1.0.4.jar" />
	<property name="collections.jar"	value="${lib.dir}/commons-collections-2.1.1.jar" />
	<property name="cglib.jar"          value="${lib.dir}/cglib-2.1.3.jar" />
	<property name="jta.jar"            value="${lib.dir}/jta.jar" />
	<property name="mysql.jar"          value="${lib.dir}/mysql-connector-java-3.1.12-bin.jar" />
	<property name="antlr.jar"          value="${lib.dir}/antlr-2.7.6rc1.jar" />
	<property name="validator.jar" 		value="${lib.dir}/commons-validator-1.3.1.jar" />
	<property name="commons-upload.jar" value="${lib.dir}/commons-fileupload.jar" />
	<property name="standard.jar" 			value="${lib.dir}/standard.jar" />
	
	<property name="servlet.jar"		value="${basedir}/servlet-lib/servlet-api.jar" />    
	<property name="jsp-api.jar"		value="${basedir}/servlet-lib/jsp-api.jar" />    
	
	<property name="spring.jar"		value="${lib.dir}/spring.jar" />
	<property name="jruby.jar"		value="${lib.dir}/jruby.jar" />
	<property name="bsf.jar"		value="${lib.dir}/bsf.jar" />
	<property name="lucene.jar"		value="${lib.dir}/lucene-core-2.1.0.jar" />
	
	<target name="init" description="Initialization">
		<tstamp/>
		<echo message="Running with Tomcat Home=${tomcat.home}" />
	</target>

	<!-- Target: CLASSPATH -->
	<path id="classpath">
		<pathelement location="${acegi.jar}"/>
		<pathelement location="${hibernate.jar}"/>
		<pathelement location="${junit.jar}"/>
		<pathelement location="${log4j.jar}"/>
		<pathelement location="${dom4j.jar}"/>
		<pathelement location="${logging.jar}"/>
		<pathelement location="${collections.jar}"/>
		<pathelement location="${mysql.jar}" />
		<pathelement location="${cglib.jar}" />
		<pathelement location="${jta.jar}" />
		<pathelement location="${antlr.jar}" />
		<pathelement location="${spring.jar}" />
		<pathelement location="${servlet.jar}" />
		<pathelement location="${jruby.jar}" />
		<pathelement location="${bsf.jar}" />
		<pathelement location="${validator.jar}" />
		<pathelement location="${commons-upload.jar}" />
		<pathelement location="${jsp-api.jar}" />
		<pathelement location="${standard.jar}" />
		<pathelement location="${lucene.jar}" />

		<!-- Include the CLASSes directory -->
		<pathelement location="${build.classes.dir}" />
	</path>

	<!-- Target: Prepare -->
	<target name="prepare">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
	</target>

	<!-- Target: Compile -->
	<target name="compile" depends="prepare">
		<javac deprecation="true"
				target="1.5"
				srcdir="${src.dir}"
				destdir="${build.classes.dir}"
				includes="**/*.java">
			<classpath refid="classpath"/>
			<compilerarg value="-Xlint" />
		</javac>
	</target>

	<!-- Target: Build -->
	<target name="package" depends="compile">
	</target>

	<!-- Target: Tomcat.deploy -->
	<target name="tomcat.deploy" depends="package">

		<!-- Copy WEB-INF Classes Directory -->
		<!-- With this build configuration, this assumes that the build script
                	is located with the webapp directory -->
		<copy todir="${basedir}/WEB-INF/classes">
			<fileset dir="${basedir}/build/classes">
				<include name="**"/>
			</fileset>
		</copy>

		<!-- End of Target Tomcat Deploy -->
	</target>

	<!-- Jar/War the Web Archive File -->
	<!-- Note: using jar task because we are working out of a web-application -->
	<!-- directory. -->
	<target name="jar.webapp" depends="package">
		<fail unless="appname.war">APPNAME.WAR must be set, see the build.properties file</fail>
		<delete>		
			<fileset dir="${build.dir}">
				<include name="**/*.zip"/>
				<include name="**/*.jar"/>
				<include name="**/*.war"/>
			</fileset>
		</delete>
		<jar destfile="${basedir}/build/${appname.war}.war" basedir="${basedir}" />
	</target>
	
	<!-- Build beans jar -->
	<target name="jar.botlist.beans" depends="compile">
		<jar jarfile="${build.dir}/botlistbeans.jar">
			<fileset dir="${basedir}/WEB-INF/classes" >
				<include name="org/spirit/bean/impl/**/*.class"/>
			</fileset>
		</jar>
	</target>
	
	<!-- Zip the development code base -->
	<target name="zip.codebase" depends="clean,prepare">
		<fail unless="appname.war">APPNAME.WAR must be set, see the build.properties file</fail>
		<zip destfile="${basedir}/build/${appname.war}_src.zip" basedir="${basedir}" />
	</target>
	
	<!-- Generate Version -->
	<target name="generate.vers" depends="package">
		<exec executable="${basedir}/getsvnversion.sh" spawn="false" failonerror="false">
		</exec>
		<java classname="org.spirit.util.version.BotListVersionReader">
			<classpath refid="classpath" />
			<classpath>
				<pathelement location="${basedir}" />
			</classpath>
			<arg value="-f" />
			<arg value="${basedir}/WEB-INF/classes/version.properties"/>			
		</java>
	</target>

	<!-- Main Clean -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${basedir}/bin" />

		<delete>
			<fileset dir="${basedir}/WEB-INF/classes">
				<include name="**" />
				<exclude name="**/*.properties" />
				<exclude name="**/*.xml" />
			</fileset>
		</delete>
	</target>
	<!-- End of Main Clean -->

	<!-- Clean the logs -->
	<target name="clean.logs">
		<!-- Check if the ant property setting has been set -->
		<fail unless="tomcat.home">TOMCAT_HOME must be set, see the build.properties file</fail>
		<delete>
			<!-- Remove all the log files including those without log extension -->
			<fileset dir="${tomcat.home}/logs">
				<include name="**"/>
			</fileset>
		</delete>
	</target>

</project>
<!-- End of the File -->